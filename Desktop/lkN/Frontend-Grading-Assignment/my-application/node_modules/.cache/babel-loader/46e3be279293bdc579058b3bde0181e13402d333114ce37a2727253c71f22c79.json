{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Desktop/RRT/my-application/src/components/InstructorContactPage.js\",\n  _s = $RefreshSig$();\n// InstructorContactPage.js\n\nimport React, { useState } from 'react';\nimport './InstructorContactPage.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorContactPage = () => {\n  _s();\n  const [instructors, setInstructors] = useState([{\n    id: 1,\n    name: 'Dr. Manuel Koko',\n    email: 'manuelkoko@example.com'\n  }, {\n    id: 2,\n    name: 'Prof. Daniel Zazu',\n    email: 'Danizaz@example.com'\n  }, {\n    id: 3,\n    name: 'Dr. Shali Popi',\n    email: 'Shalipops@example.com'\n  }, {\n    id: 4,\n    name: 'Prof. Nick Asamoah',\n    email: 'NickAsam@example.com'\n  }, {\n    id: 5,\n    name: 'Dr. Adjetey Brown',\n    email: 'adjetbrown@example.com'\n  }, {\n    id: 6,\n    name: 'Prof. Thomas Aseye',\n    email: 'thomasye@example.com'\n  }, {\n    id: 7,\n    name: 'Dr. Christopher Asare',\n    email: 'christofasare@example.com'\n  }]);\n  const [selectedInstructor, setSelectedInstructor] = useState(null);\n  const [emailSubject, setEmailSubject] = useState('');\n  const [emailContent, setEmailContent] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState('');\n  const handleEmailSend = () => {\n    if (selectedInstructor && emailSubject && emailContent) {\n      setConfirmationMessage(`Email sent to ${selectedInstructor.name}`);\n      setSelectedInstructor(null);\n      setEmailSubject('');\n      setEmailContent('');\n    } else {\n      setConfirmationMessage('Please fill in all fields before sending.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instructor-contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Instructor Contact Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructor-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Instructors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: instructors.map(instructor => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedInstructor(instructor),\n          children: instructor.name\n        }, instructor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedInstructor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructor-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contact Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", selectedInstructor.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \", selectedInstructor.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Send Simulated Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailSubject\",\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"emailSubject\",\n          value: emailSubject,\n          onChange: e => setEmailSubject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailContent\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"emailContent\",\n          value: emailContent,\n          onChange: e => setEmailContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEmailSend,\n          children: \"Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), confirmationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"confirmation-message\",\n      children: confirmationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorContactPage, \"cxRyLF7cp++B06mrrnS9phFLpGw=\");\n_c = InstructorContactPage;\nexport default InstructorContactPage;\nvar _c;\n$RefreshReg$(_c, \"InstructorContactPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InstructorContactPage","_s","instructors","setInstructors","id","name","email","selectedInstructor","setSelectedInstructor","emailSubject","setEmailSubject","emailContent","setEmailContent","confirmationMessage","setConfirmationMessage","handleEmailSend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","instructor","onClick","htmlFor","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/charlie/Desktop/RRT/my-application/src/components/InstructorContactPage.js"],"sourcesContent":["// InstructorContactPage.js\n\nimport React, { useState } from 'react';\nimport './InstructorContactPage.css'; // Import the CSS file for styling\n\nconst InstructorContactPage = () => {\n  const [instructors, setInstructors] = useState([\n    { id: 1, name: 'Dr. Manuel Koko', email: 'manuelkoko@example.com' },\n    { id: 2, name: 'Prof. Daniel Zazu', email: 'Danizaz@example.com' },\n    { id: 3, name: 'Dr. Shali Popi', email: 'Shalipops@example.com' },\n    { id: 4, name: 'Prof. Nick Asamoah', email: 'NickAsam@example.com' },\n    { id: 5, name: 'Dr. Adjetey Brown', email: 'adjetbrown@example.com' },\n    { id: 6, name: 'Prof. Thomas Aseye', email: 'thomasye@example.com' },\n    { id: 7, name: 'Dr. Christopher Asare', email: 'christofasare@example.com' },\n  ]);\n\n  const [selectedInstructor, setSelectedInstructor] = useState(null);\n  const [emailSubject, setEmailSubject] = useState('');\n  const [emailContent, setEmailContent] = useState('');\n  const [confirmationMessage, setConfirmationMessage] = useState('');\n\n  const handleEmailSend = () => {\n    \n\n    if (selectedInstructor && emailSubject && emailContent) {\n      setConfirmationMessage(`Email sent to ${selectedInstructor.name}`);\n      \n      setSelectedInstructor(null);\n      setEmailSubject('');\n      setEmailContent('');\n    } else {\n      setConfirmationMessage('Please fill in all fields before sending.');\n    }\n  };\n\n  return (\n    <div className=\"instructor-contact-container\">\n      <h2>Instructor Contact Page</h2>\n\n      <div className=\"instructor-list\">\n        <h3>Instructors:</h3>\n        <ul>\n          {instructors.map((instructor) => (\n            <li key={instructor.id} onClick={() => setSelectedInstructor(instructor)}>\n              {instructor.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {selectedInstructor && (\n        <div className=\"instructor-details\">\n          <h3>Contact Details:</h3>\n          <p>\n            <strong>Name:</strong> {selectedInstructor.name}\n          </p>\n          <p>\n            <strong>Email:</strong> {selectedInstructor.email}\n          </p>\n\n          <div className=\"email-form\">\n            <h3>Send Simulated Email:</h3>\n            <label htmlFor=\"emailSubject\">Subject:</label>\n            <input\n              type=\"text\"\n              id=\"emailSubject\"\n              value={emailSubject}\n              onChange={(e) => setEmailSubject(e.target.value)}\n            />\n\n            <label htmlFor=\"emailContent\">Content:</label>\n            <textarea\n              id=\"emailContent\"\n              value={emailContent}\n              onChange={(e) => setEmailContent(e.target.value)}\n            />\n\n            <button type=\"button\" onClick={handleEmailSend}>\n              Send Email\n            </button>\n          </div>\n        </div>\n      )}\n\n      {confirmationMessage && (\n        <p className=\"confirmation-message\">{confirmationMessage}</p>\n      )}\n    </div>\n  );\n};\n\nexport default InstructorContactPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}