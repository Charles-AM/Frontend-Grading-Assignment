{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Desktop/RRT/my-application/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [pin, setPin] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = () => {\n    const isValidLogin = validateLogin(studentId, pin);\n    if (isValidLogin) {\n      alert('Login successful!');\n    } else {\n      // Simulating a failed login\n      setErrorMessage('Invalid Student ID or PIN');\n    }\n  };\n  const validateLogin = (id, pin) => {\n    return id === '12345' && pin === '6789';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"studentId\",\n        children: \"Student ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"studentId\",\n        value: studentId,\n        onChange: e => setStudentId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pin\",\n        children: \"PIN:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"pin\",\n        value: pin,\n        onChange: e => setPin(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"9KKAmwsMs8nfSGnrvaqkQyCVhhc=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","studentId","setStudentId","pin","setPin","errorMessage","setErrorMessage","handleLogin","isValidLogin","validateLogin","alert","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/charlie/Desktop/RRT/my-application/src/components/LoginPage.js"],"sourcesContent":["\n\nimport React, { useState } from 'react';\nimport './LoginPage.css'; \n\nconst LoginPage = () => {\n  const [studentId, setStudentId] = useState('');\n  const [pin, setPin] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLogin = () => {\n    \n    const isValidLogin = validateLogin(studentId, pin);\n\n    if (isValidLogin) {\n      \n      alert('Login successful!');\n    } else {\n      // Simulating a failed login\n      setErrorMessage('Invalid Student ID or PIN');\n    }\n  };\n\n  const validateLogin = (id, pin) => {\n    \n    return id === '12345' && pin === '6789';\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h1>Student Login Page</h1>\n      <form>\n        <label htmlFor=\"studentId\">Student ID:</label>\n        <input\n          type=\"text\"\n          id=\"studentId\"\n          value={studentId}\n          onChange={(e) => setStudentId(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"pin\">PIN:</label>\n        <input\n          type=\"password\"\n          id=\"pin\"\n          value={pin}\n          onChange={(e) => setPin(e.target.value)}\n          required\n        />\n\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n\n        <button type=\"button\" onClick={handleLogin}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMW,WAAW,GAAGA,CAAA,KAAM;IAExB,MAAMC,YAAY,GAAGC,aAAa,CAACR,SAAS,EAAEE,GAAG,CAAC;IAElD,IAAIK,YAAY,EAAE;MAEhBE,KAAK,CAAC,mBAAmB,CAAC;IAC5B,CAAC,MAAM;MACL;MACAJ,eAAe,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC;EAED,MAAMG,aAAa,GAAGA,CAACE,EAAE,EAAER,GAAG,KAAK;IAEjC,OAAOQ,EAAE,KAAK,OAAO,IAAIR,GAAG,KAAK,MAAM;EACzC,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAOoB,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CnB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXR,EAAE,EAAC,WAAW;QACdS,KAAK,EAAEnB,SAAU;QACjBoB,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFnB,OAAA;QAAOoB,OAAO,EAAC,KAAK;QAAAL,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCnB,OAAA;QACEqB,IAAI,EAAC,UAAU;QACfR,EAAE,EAAC,KAAK;QACRS,KAAK,EAAEjB,GAAI;QACXkB,QAAQ,EAAGC,CAAC,IAAKlB,MAAM,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCI,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EAEDZ,YAAY,iBAAIP,OAAA;QAAGc,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAER;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEhEnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAElB,WAAY;QAAAM,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CArDID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}